AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  ECSCluster:
    Type: String
    Description: Cluster
  Alb2FargateSg:
    Type: String
    Description: Security group between alb and fargate container
  FargateSg:
    Type: String
    Description: Security group for fargate container
  SignalPort:
    Type: String
    Description: Port for the signal processing application
  SignalRole:
    Type: String
    Description: Role ARN for the signal task definition

Resources:
  MySignalServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      TaskRoleArn: !Ref SignalRole
      ExecutionRoleArn: !Ref SignalRole
      Cpu: 256
      Memory: 512
      NetworkMode: "awsvpc"
      ContainerDefinitions:
        - Name: "signal-service-process"
          Image: '109139691401.dkr.ecr.eu-central-1.amazonaws.com/signal-process:v9'
          MemoryReservation: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 3000
              Protocol: tcp
          Environment:
            - Name: local_file_path
              Value: /app/local-file.wav
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-region: eu-central-1
              awslogs-create-group: true
              awslogs-group: my-signal-service-processs-container
              awslogs-stream-prefix: ecs
  
  FargateAlb:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: FargateAlb
      # these are static subnets
      # for now just use the default vpc
      # the purpose for today would be
      # to deploy all these resources
      Subnets:
        - subnet-42a06e3e
        - subnet-7bc65511
        - subnet-c0d00d8c
      Type: application
      SecurityGroups:
        - !Ref FargateSg

  MySignalFargateTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: signal-process-throughput-exp
      VpcId: vpc-08963e62
      Protocol: HTTP
      Port: 3000
      HealthCheckPath: /healthcheck
      TargetType: ip
  
  SignalListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref MySignalFargateTargetGroup
          Type: forward
      LoadBalancerArn: !GetAtt FargateAlb.LoadBalancerArn # this is form the internet to the load balancer
      Port: !Ref SignalPort
      Protocol: HTTP
  
  MySignalService:
    Type: AWS::ECS::Service
    DependsOn:
      - SignalListener
    Properties:
      LaunchType: FARGATE
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      TaskDefinition:
        Ref: "MySignalServiceTaskDefinition"
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref Alb2FargateSg
          Subnets: ['subnet-42a06e3e','subnet-7bc65511','subnet-c0d00d8c']
      LoadBalancers:
        - TargetGroupArn:
            Ref: MySignalFargateTargetGroup
          ContainerPort: 3000
          ContainerName: signal-service-process
  
Outputs:
  AlbEndpoint:
    Description: "Alb endpoint"
    Value: !GetAtt FargateAlb.DNSName